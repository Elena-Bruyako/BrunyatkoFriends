DROP TABLE IF EXISTS CONTACT;
DROP TABLE IF EXISTS HOBBY;
DROP TABLE IF EXISTS MESSAGE;
DROP TABLE IF EXISTS PLACE;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS CONTACT_FRIENDSHIP;

CREATE TABLE CONTACT (
       ID INT NOT NULL AUTO_INCREMENT
     , FIRST_NAME VARCHAR(99) NOT NULL
     , LAST_NAME VARCHAR(99) NOT NULL
     , BIRTH_DATE DATE
     , PRIMARY KEY (ID)
);

CREATE TABLE HOBBY (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(99) NOT NULL
     , DESCRIPTION VARCHAR(99) NOT NULL
     , PRIMARY KEY (ID)
);


CREATE TABLE PLACE (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(99) NOT NULL
     , DESCRIPTION VARCHAR(99) NOT NULL
     , LONGITUDE DOUBLE
     , LATITUDE  DOUBLE
     , PRIMARY KEY (ID)
);

CREATE TABLE POST (
       ID INT NOT NULL AUTO_INCREMENT
     , CONTACT_ID INT NOT NULL
     , TITLE VARCHAR(99) NOT NULL
     , CONTENT VARCHAR(99) NOT NULL
     , DATE_POST DATE
     , PRIMARY KEY (ID)
     , FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (ID)
);

CREATE TABLE CONTACT_HOBBY (
       CONTACT_ID INT NOT NULL
     , HOBBY_ID INT NOT NULL
     , CONSTRAINT FK_CONTACT_HOBBY_1 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (ID)
     , CONSTRAINT FK_CONTACT_HOBBY_2 FOREIGN KEY (HOBBY_ID) REFERENCES HOBBY (ID)
     , PRIMARY KEY(CONTACT_ID, HOBBY_ID)
);

CREATE TABLE CONTACT_PLACE (
       CONTACT_ID INT NOT NULL
     , PLACE_ID INT NOT NULL
     , CONSTRAINT FK_CONTACT_PLACE_1 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (ID)
     , CONSTRAINT FK_CONTACT_PLACE_2 FOREIGN KEY (PLACE_ID) REFERENCES PLACE (ID)
     , PRIMARY KEY(CONTACT_ID, PLACE_ID)
);

CREATE TABLE MESSAGE (
      ID INT NOT NULL AUTO_INCREMENT
    , MESSAGE_TIME TIMESTAMP NOT NULL
    , CONTACT_FROM_ID INT NOT NULL
    , CONTACT_TO_ID INT NOT NULL
    , CONTENT VARCHAR(1000) NOT NULL
    , PRIMARY KEY (ID)
    , CONSTRAINT FK_MESSAGE_1 FOREIGN KEY (CONTACT_FROM_ID) REFERENCES CONTACT(ID)
    , CONSTRAINT FK_MESSAGE_2 FOREIGN KEY (CONTACT_TO_ID) REFERENCES CONTACT(ID)
);

CREATE TABLE CONTACT_FRIENDSHIP(
  	  CONTACT_ID INT NOT NULL
  	, FRIEND_ID INT NOT NULL
  	, PRIMARY KEY (CONTACT_ID,FRIEND_ID)
  	, CONSTRAINT FK_CONTACT_FRIENDSHIP_1 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT (ID) ON DELETE CASCADE
  	, CONSTRAINT FK_CONTACT_FRIENDSHIP_2 FOREIGN KEY (FRIEND_ID) REFERENCES CONTACT (ID)
);